# PAM - assume user
resource "aws_iam_policy" "main-pam" {
  name        = "${var.name}-bastion-pam-policy"
  path        = "/"
  description = "${var.name}-bastion-pam Policy"

  policy      = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "sts:GetSessionToken",
        "iam:CreateAccessKey",
        "iam:DeleteAccessKey"
      ],
      "Resource": [
        "*"
      ]
    }
  ]
}
EOF
}



resource "aws_iam_role_policy_attachment" "main-pam" {
  role       = "${module.ec2.iam_role_name}"
  policy_arn = "${aws_iam_policy.main-pam.arn}"
}


# PAM Chanllenge
//resource "aws_iam_policy" "main-mfa" {
//  name        = "${var.name}-bastion-mfa-policy"
//  path        = "/"
//  description = "${var.name} Bastion MFA Policy"
//
//  policy      = <<EOF
//{
//  "Version": "2012-10-17",
//  "Statement": [
//    {
//      "Effect": "Allow",
//      "Action": "sts:AssumeRole",
//      "Resource": "arn:aws:iam::${local.account_id}:role/${var.name}-bastion-mfa-role"
//    }
//  ]
//}
//EOF
//}

//resource "aws_iam_group_policy_attachment" "mfa" {
//  # may run into issues if this group is in another account
//  group      = "${var.iam_user_groups}"
//  policy_arn = "${aws_iam_policy.main-mfa.arn}"
//}
//
//# Will be assumed via PAM, but has no access to anything
//resource "aws_iam_role" "main-mfa" {
//  name               = "${var.name}-bastion-mfa-assume-role"
//
//  assume_role_policy = <<EOF
//{
//  "Version": "2012-10-17",
//  "Statement": [
//    {
//      "Effect": "Allow",
//      "Principal": {
//        "Service": [
//          "ec2.amazonaws.com"
//        ]
//      },
//      "Action": "sts:AssumeRole",
//      "Condition": {
//        "Bool": {
//          "aws:MultiFactorAuthPresent": "true"
//        }
//      }
//    }
//  ]
//}
//EOF
//}

